# Compile Godot 4
# See also: https://docs.godotengine.org/en/latest/development/compiling/compiling_for_linuxbsd.html

name: Godot build pipeline

#env:


on:
  schedule:
    # Run at 02:47 UTC each morning
    - cron: "47 2 * * *"

defaults:
  run:
    shell: bash

# If a new commit is pushed before the old one's CI has completed (on the same branch), abort previous run
#concurrency:
#  group: ${{ github.head_ref }}
#  cancel-in-progress: true

jobs:
  compile-godot:
    runs-on: ubuntu-latest
    steps:

      - name: "Clone Godot"
        run: |
          git clone https://github.com/godotengine/godot.git --depth 1 --branch master .
          echo "SHA=`git rev-parse HEAD`" >> $GITHUB_ENV
          echo "SHORT_SHA=`git rev-parse --short HEAD`" >> $GITHUB_ENV

      - name: "Check cache for Godot version ${{ env.SHORT_SHA }}"
        id: cache-godot
        uses: actions/cache@v2
        with:
          path: bin #${{ runner.temp }}/godot_bin
          key: godot-${{ runner.os }}-${{ env.SHA }}

      - name: "Linux dependencies"
        if: steps.cache-godot.outputs.cache-hit != 'true'
        run: |
          # Azure repositories are not reliable, we need to prevent azure giving us packages.
          sudo rm -f /etc/apt/sources.list.d/*
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update
          # The actual dependencies
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
              libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev \
              libdbus-1-dev libudev-dev libxi-dev libxrandr-dev yasm xvfb wget unzip \
              llvm libspeechd-dev speech-dispatcher

      - name: "Scons"
        if: steps.cache-godot.outputs.cache-hit != 'true'
        run: |
          pip install scons==3.1.2
          scons --version

      - name: "Compile Godot..."
        if: steps.cache-godot.outputs.cache-hit != 'true'
        run: |
          scons -j$(nproc) platform=linuxbsd tools=no target=release_debug bits=64

      - name: "Make executable"
        if: steps.cache-godot.outputs.cache-hit != 'true'
        run: chmod +x bin/godot.linuxbsd.opt.debug.64

      # Upload artifact also when cached (so last successful workflow always has artifact)
      - name: "Upload artifact"
        uses: actions/upload-artifact@v3
        with:
          name: godot-linux
          path: bin

      - name: "Summary"
        run: |
          godotVer=$(bin/godot.linuxbsd.opt.debug.64 --version || true)
          echo "## Godot version: \`$godotVer\`" >> $GITHUB_STEP_SUMMARY
          echo "Built from commit [\`$SHA\`](https://github.com/godotengine/godot/commit/$SHA)." >> $GITHUB_STEP_SUMMARY